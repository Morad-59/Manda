



/* ControlTag Loader for Webedia 221bdf58-7735-4bcb-9673-a03b459a1a40 */
(function(w, cs) {
  
  if (/Twitter for iPhone/.test(w.navigator.userAgent || '')) {
    return;
  }

  var debugging = /kxdebug/.test(w.location);
  var log = function() {
    
    debugging && w.console && w.console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = w.document.createElement('script');
    node.async = true;  
    node.src = url;

    
    node.onload = node.onreadystatechange = function () {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  
        callback();
      }
    };

    
    var sibling = w.document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  var config = {"app":{"name":"krux-scala-config-webservice","version":"3.42.1","schema_version":3},"confid":"KO9491hR","context_terms":[{"id":"L2FvEKA0","value":"fortnite"},{"id":"L2FvEKiB","value":"ordenador"}],"publisher":{"name":"Webedia","active":true,"uuid":"221bdf58-7735-4bcb-9673-a03b459a1a40","version_bucket":"stable","id":1832},"params":{"first_party_dmp_managed":true,"link_header_bidder":false,"site_level_supertag_config":"site","recommend":false,"control_tag_pixel_throttle":100,"fingerprint":false,"optout_button_optout_text":"Browser Opt Out","user_data_timing":"load","consent_active":true,"use_central_usermatch":true,"store_realtime_segments":false,"tag_source":false,"link_hb_start_event":"ready","optout_button_optin_text":"Browser Opt In","first_party_uid":true,"link_hb_timeout":2000,"link_hb_adserver_subordinate":true,"optimize_realtime_segments":false,"link_hb_adserver":"dfp","target_fingerprint":false,"context_terms":true,"optout_button_id":"kx-optout-button","dfp_premium":true,"control_tag_namespace":"webedia"},"prioritized_segments":[],"realtime_segments":[{"id":"su01ovfbg","test":["and",["and",["or",["intersects","$page_attr_3a2_page_type",["article"]]]]]},{"id":"rmh5uttha","test":["or",["and",["or",["intersects","$page_attr_jv_game_genre:,",["combat"]]]],["and",["or",["contains","$page_attr_ac_actor:,",["5311"]]]]]},{"id":"thbta2e5u","test":["and",["and",["or",["intersects","$page_attr_3DJ_platform",["ps4"]]]]]},{"id":"rwbhejzdl","test":["and",["and",["or",["intersects","$page_attr_movie_id:,",["241997"]],["intersects","$page_attr_movie_id:,",["177631"]],["intersects","$page_attr_movie_id:,",["247743"]],["intersects","$page_attr_movie_id:,",["247484"]]]]]},{"id":"qeroufkth","test":["and",["and",["or",["contains","$page_attr_movie_label",["star_wars"]]]]]},{"id":"sqyhloesi","test":["and",["and",["or",["intersects","$page_attr_3DJ_game_name",["age-of-empires-iii"]]]]]},{"id":"rnopmr7ok","test":["and",["and",["or",["notContains","$page_attr_750g_section_data_ingredients:;",["sel"]],["intersects","$page_attr_750g_section_data_primary_tags:,",["aperitif_sans_sel","cake_sans_sel","cuisine_sans_sel","desserts_sans_sel","soupe_sans_sel"]]]]]},{"id":"rmh4npi8y","test":["and",["and",["or",["intersects","$page_attr_ac_director:,",["15570"]]]]]},{"id":"rtfu51iiz","test":["and",["and",["or",["intersects","$page_attr_se_series_label",["24"]]]]]},{"id":"qoy2tt1z4","test":["and",["and",["or",["intersects","$page_attr_genre_label2:,",["animation","dessin animé","dessin_anime"]]]]]},{"id":"tgrxzxf00","test":["and",["and",["or",["intersects","$page_attr_se_genre_label2:,",["acción,aventura","acción,aventura,drama","acción,aventura,fantasía","acción,fantasía","acción,fantasía,aventura","acción,fantasía,épico","aventura","aventura,acción"]],["intersects","$page_attr_se_series_id:,",["7157"]]]]]}],"services":{"userdata":"//cdn.krxd.net/userdata/get","contentConnector":"https://connector.krxd.net/content_connector","stats":"//apiservices.krxd.net/stats","optout":"//cdn.krxd.net/userdata/optout/status","event":"//beacon.krxd.net/event.gif","set_optout":"https://consumer.krxd.net/consumer/optout","data":"//beacon.krxd.net/data.gif","link_hb_stats":"//beacon.krxd.net/link_bidder_stats.gif","userData":"//cdn.krxd.net/userdata/get","link_hb_mas":"https://link.krxd.net/hb","config":"//cdn.krxd.net/controltag/{{ confid }}.js","social":"//beacon.krxd.net/social.gif","addSegment":"//cdn.krxd.net/userdata/add","pixel":"//beacon.krxd.net/pixel.gif","um":"https://usermatch.krxd.net/um/v2","controltag":"//cdn.krxd.net/ctjs/controltag.js.{hash}","loopback":"https://consumer.krxd.net/consumer/tmp_cookie","remove":"https://consumer.krxd.net/consumer/remove/221bdf58-7735-4bcb-9673-a03b459a1a40","click":"https://apiservices.krxd.net/click_tracker/track","stats_export":"//beacon.krxd.net/controltag_stats.gif","userdataApi":"//cdn.krxd.net/userdata/v1/segments/get","cookie":"//beacon.krxd.net/cookie2json","proxy":"//cdn.krxd.net/partnerjs/xdi","consent_get":"https://consumer.krxd.net/consent/get/221bdf58-7735-4bcb-9673-a03b459a1a40","consent_set":"https://consumer.krxd.net/consent/set/221bdf58-7735-4bcb-9673-a03b459a1a40","is_optout":"https://beacon.krxd.net/optout_check","impression":"//beacon.krxd.net/ad_impression.gif","transaction":"//beacon.krxd.net/transaction.gif","log":"//jslog.krxd.net/jslog.gif","portability":"https://consumer.krxd.net/consumer/portability/221bdf58-7735-4bcb-9673-a03b459a1a40","set_optin":"https://consumer.krxd.net/consumer/optin","usermatch":"//beacon.krxd.net/usermatch.gif"},"experiments":[],"site":{"name":"allocine.fr","cap":255,"id":40224,"organization_id":1832,"uid":"KO9491hR"},"tags":[{"id":7580,"name":"Krux Standard DTC","content":"<script>\n(function(){\n\tKrux('scrape',{'page_attr_url_path_1':{'url_path':'1'}});\n\tKrux('scrape',{'page_attr_url_path_2':{'url_path':'2'}});\n\tKrux('scrape',{'page_attr_url_path_3':{'url_path':'3'}});\n\tKrux('scrape',{'page_attr_meta_keywords':{meta_name:'keywords'}});\n\tKrux('scrape',{'page_attr_domain':{url_domain: '2'}});\n})();\n</script>","target":null,"target_action":"append","timing":"onready","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":7359,"name":"Technographic Data provider tag","content":"<script>\r\n// this tag is intentionally blank\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":["and",["and",["and",["<=","$frequency",3]]]],"collects_data":true},{"id":7360,"name":"Krux Geographic Data provider tag","content":null,"target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":["and",["and",["and",["<=","$frequency",3]]]],"collects_data":true},{"id":7361,"name":"Krux Track Social","content":"<script type=\"text/javascript\">Krux('social.init');</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":7624,"name":"DTC Allocine","content":"<script>\n(function() {\n  \n  var separator = ',';\n\n  if (typeof(dataLayer[0].tags) != \"undefined\" ) \n  { \n    Krux('set', 'page_attr_movie_ac_tags', dataLayer[0].tags); \n  }\n\n  if (typeof(dataLayer[0].site_section) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_site_section', dataLayer[0].site_section);\n  }\n\n  if (typeof(dataLayer[0].movie_isshowtime) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_movie_isshowtime', dataLayer[0].movie_isshowtime);\n  }\n\n  if (typeof(dataLayer[0].movie_distributors) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_movie_distributors', dataLayer[0].movie_distributors);\n  }\n\n  if (typeof(dataLayer[0].user_activity) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_user_activity', dataLayer[0].user_activity);\n  }\n\n  if (typeof(dataLayer[0].geo_dep) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_geo_dep', dataLayer[0].geo_dep);\n  }\n\n  if (typeof(dataLayer[0].geo_zip) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_geo_zip', dataLayer[0].geo_zip);\n  }\n\n  if (typeof(dataLayer[0].zip_code) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_zip_code', dataLayer[0].zip_code);\n  }\n\n  if (typeof(dataLayer[0].series_id) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_series_id', dataLayer[0].series_id);\n  }\n\n  if (typeof(dataLayer[0].series_label) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_series_label', dataLayer[0].series_label);\n  }\n\n  if (typeof(dataLayer[0].series_isbroadcast) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_series_isbroadcast', dataLayer[0].series_isbroadcast);\n  }\n\n  if (typeof(dataLayer[0].search) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_search', dataLayer[0].search);\n  }\n  \n  if (typeof(dataLayer[0].movie_id) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_movie_id', dataLayer[0].movie_id);\n  }\n  \n  if (typeof(dataLayer[0].movie_label) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_movie_label', dataLayer[0].movie_label);\n  }\n  \n  \n  if (typeof(dataLayer[0].actor) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_ac_actor', dataLayer[0].actor);\n  }\n  \n   if (typeof(dataLayer[0].director) != \"undefined\" )\n  {\n    Krux('set', 'page_attr_ac_director', dataLayer[0].director);\n  }\n  \n if (typeof(dataLayer[0].genre) != \"undefined\" )\n {\n\n    if (typeof(dataLayer[0].genre) == 'object')\n    {\n      var genre_id = '';\n      var genre_label = '';\n\n      for (var g_id in dataLayer[0].genre) \n      {\n         genre_id += g_id.concat(separator);\n         genre_label += dataLayer[0].genre[g_id].concat(separator);  \n      }\n      genre_id = genre_id.substring(0,genre_id.length-1);\n      genre_label = genre_label.substring(0,genre_label.length-1);\n        \n      Krux('set', 'page_attr_genre_id2', genre_id);\n      Krux('set', 'page_attr_genre_label2', genre_label);\n    }\n    else\n    {\n      var genre = dataLayer[0].genre;\n      var tab_genre=genre.split(\"&\");\n    \n      var genre_id = '';\n      var genre_label = '';\n    \n      for (var i=0; i<tab_genre.length; i++) \n      {\n        var split_genre = tab_genre[i]; \n        var id_label_genre = split_genre.split(\"=\");\n      \n        genre_id += id_label_genre[0].concat(separator);\n        genre_label += id_label_genre[1].concat(separator);          \n      }\n    \n      genre_id = genre_id.substring(0,genre_id.length-1);\n      genre_label = genre_label.substring(0,genre_label.length-1);\n        \n      Krux('set', 'page_attr_genre_id2', genre_id);\n      Krux('set', 'page_attr_genre_label2', genre_label);\n    }\n  }\n\n  if (typeof(dataLayer[0].linked_entities) != \"undefined\" )\n  {\n\n    if (typeof(dataLayer[0].linked_entities.movie) != \"undefined\")\n    {\n      Krux('set', 'page_attr_movie_id', dataLayer[0].linked_entities.movie[0]);  \n    }\n\n    if (typeof(dataLayer[0].linked_entities.series) != \"undefined\")\n    {\n      Krux('set', 'page_attr_series_id', dataLayer[0].linked_entities.series[0]);  \n    }\n  }\n  \n  /* get booking clic */\n\n  var booking_link = document.getElementsByClassName(\"hours-item-booking\");\n  \n  var getdata_booking = function() {\n    var string_data = '';\n\n    if (typeof(dataLayer[0].movie_id) != \"undefined\" )\n    {  \n      string_data += '&ticket_booking_movie_id=' + dataLayer[0].movie_id;\n    }\n\n    if (typeof(dataLayer[0].movie_label) != \"undefined\" )\n    {\n      string_data += '&ticket_booking_movie_label=' + encodeURIComponent(dataLayer[0].movie_label);\n    }\n\n    if (typeof(dataLayer[0].genre) != \"undefined\" )\n    {\n      var genre = dataLayer[0].genre;\n    \n      var tab_genre=genre.split(\"&\");\n    \n      var genre_id = '';\n      var genre_label = '';\n    \n      for (var i=0; i < tab_genre.length; i++) \n      {\n        var split_genre = tab_genre[i]; \n        \n        var id_label_genre = split_genre.split(\"=\");\n      \n        string_data += '&ticket_booking_genre_id=' + id_label_genre[0];\n        string_data += '&ticket_booking_genre_label=' + encodeURIComponent(id_label_genre[1]);\n      }\n    }\n\n    var img_src = 'https://beacon.krxd.net/event.gif?event_id=KTIIOB1o&event_type=clk&pub_id=0fd0bb10-6db5-11df-be2b-0800200c9a66' + string_data;\n\n    var img_event_booking = document.createElement('img');\n    img_event_booking.src = img_src;\n    img_event_booking.width = '0';\n    img_event_booking.height = '0';\n    document.body.appendChild(img_event_booking);\n\n  };\n\n  for (var i = 0; i < booking_link.length; i++) \n  {\n    booking_link[i].addEventListener('click', getdata_booking, false);\n  }\n  /* get booking clic */\n  \n})();\n\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true},{"id":17432,"name":"Cinephile assidu","content":"<script>\n  (function(){\n\t/*Check with stickyads that this is the correct url,\n\tthen replace [PROVIDER_ID] with provider id number*/\n\tvar prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\n\tvar sticky_url = prefix + '//ads.stickyadstv.com/data-registering?dataProviderId=369&segment=qbx3rc5w7';\n    (new Image()).src = sticky_url;\n\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":["and",["and",["and",["intersects","$user_segments",["qbx3rc5w7"]]]]],"collects_data":true},{"id":17451,"name":"Sticky Synchro","content":"<script>\n(function(){\n\t/*Check with stickyads that this is the correct url,\n\tthen replace [PROVIDER_ID] with provider id number*/\n    try {\n\t\tvar prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\n\t\tvar sticky_url = prefix + '//ads.stickyadstv.com/data-registering?dataProviderId=369';\n     \n    \tvar segments = '';\n    \tvar tab_segments = Krux('get','user_segments');\n  \t\n    \tfor(var i= 0; i < tab_segments.length; i++)\n\t\t{\n     \t\tsegments = segments + '&' + tab_segments[i] + '=1'; \n\t\t}\n  \n\t\tif(segments != ''){\n\t\t\tsticky_url += segments;\n\t\t\t(new Image()).src = sticky_url;\n\t\t}\n    }\n    catch(error) {}\n})();\n  \n  (function(){\n   /*Check with stickyads that this is the correct url,\n\t\tthen replace [PROVIDER_ID] with provider id number*/ \n    try {\t\n\t\tvar prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\n\t\tvar sticky_url = prefix + '//ads.stickyadstv.com/data-registering?dataProviderId=545&segments=';\n\t\tvar segments = Krux('get','user_segments').join('.');\n\t\tif(segments){\n\t\t\tsticky_url += segments;\n\t\t\t(new Image()).src = sticky_url;\n\t\t}\n    }\n    catch(error) {}\n})();\n\n</script>\n<img src=\"https://ads.stickyadstv.com/auto-user-sync\" border=\"0\" width=\"1\" height=\"1\" />","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":19445,"name":"Cookie Sync Tradelab/Wootbox","content":"<script>\n(function(){\n  try \n  {\n\tvar prefix = window.location.protocol == 'https:' ? 'https:' : 'http:';\n   \n    var tab_segments = Krux('get','user_segments');\n  \t\n    for(var i= 0; i < tab_segments.length; i++)\n\t{\n        var url = \"\";\n  \n        if (tab_segments[i] == \"qnfsbb3o9\")\n        {\n        \turl = prefix + \"//cdn.tradelab.fr/seg.js?add=5157922\";  \n        }\n      \n        if (tab_segments[i] == \"qnfstqhe8\")\n        {\n        \turl = prefix + \"//cdn.tradelab.fr/seg.js?add=5157929\";  \n        }\n      \n      \tif (tab_segments[i] == \"qnfs5wb1s\")\n        {\n        \turl = prefix + \"//cdn.tradelab.fr/seg.js?add=5157932\";  \n        }\n      \n        if (tab_segments[i] == \"qnftbo169\")\n        {\n        \turl = prefix + \"//cdn.tradelab.fr/seg.js?add=5157933\";  \n        }\n      \n        if (tab_segments[i] == \"qnftlol1e\")\n        {\n        \turl = prefix + \"//cdn.tradelab.fr/seg.js?add=5157936\";  \n        }\n           \n      \n       \tif (url != \"\")\n       \t{\n        \tvar script = document.createElement('script'); \n      \t\tscript.src = url;\n\t\t\tdocument.getElementsByTagName('head')[0].appendChild(script);\n        }\n\t}\n  }\n  catch(err) {}\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":35548,"name":"Test Consent","content":"<script>\n\nfunction getCookie(w){\n\tcName = \"\";\n\tpCOOKIES = new Array();\n\tpCOOKIES = document.cookie.split('; ');\n\tfor(bb = 0; bb < pCOOKIES.length; bb++){\n\t\tNmeVal  = new Array();\n\t\tNmeVal  = pCOOKIES[bb].split('=');\n\t\tif(NmeVal[0] == w){\n\t\t\tcName = unescape(NmeVal[1]);\n\t\t}\n\t}\n\treturn cName;\n}\n\nfunction printCookies(w){\n\tcStr = \"\";\n\tpCOOKIES = new Array();\n\tpCOOKIES = document.cookie.split('; ');\n\tfor(bb = 0; bb < pCOOKIES.length; bb++){\n\t\tNmeVal  = new Array();\n\t\tNmeVal  = pCOOKIES[bb].split('=');\n\t\tif(NmeVal[0]){\n\t\t\tcStr += NmeVal[0] + '=' + unescape(NmeVal[1]) + '; ';\n\t\t}\n\t}\n\treturn cStr;\n}\n\nfunction setCookie(name, value, expires, path, domain, secure){\n\tcookieStr = name + \"=\" + escape(value) + \"; \";\n\t\n\tif(expires){\n\t\texpires = setExpiration(expires);\n\t\tcookieStr += \"expires=\" + expires + \"; \";\n\t}\n\tif(path){\n\t\tcookieStr += \"path=\" + path + \"; \";\n\t}\n\tif(domain){\n\t\tcookieStr += \"domain=\" + domain + \"; \";\n\t}\n\tif(secure){\n\t\tcookieStr += \"secure; \";\n\t}\n\t\n\tdocument.cookie = cookieStr;\n}\n\nfunction setExpiration(cookieLife){\n    var today = new Date();\n    var expr = new Date(today.getTime() + cookieLife * 60 * 60 * 1000);\n    return  expr.toGMTString();\n}\n\n\n\n\n\n\nvar krux_user = Krux('ns:webedia','get','user');\n\nvar ckrux = getCookie('checkConsKrux');\n\n\nfunction krux_set_consent(consent)\n{\n\t\n}\n\nfunction krux_check_consent(consent)\n{\n\t\n\n\tif (consent.body.settings.dc != 1 || consent.body.settings.al != 1|| consent.body.settings.tg !=1 || consent.body.settings.cd !=1 || consent.body.settings.sh !=1 || consent.body.settings.re != 1)\n\t{\n      if (ckrux == \"\")\n      {\n\t    var url_set_consent = \"https://consumer.krxd.net/consent/set/221bdf58-7735-4bcb-9673-a03b459a1a40?idt=device&dt=kxcookie&idv=\" + krux_user + \"&pr=gdpr&callback=krux_set_consent&dc=true&al=true&tg=true&cd=true&sh=true&re=true\";\n\n\tks_script = document.createElement('script'),\n    ks_head = document.getElementsByTagName('head')[0] \n               || document.documentElement;\n\n    ks_script.src = url_set_consent;\n    ks_head.appendChild(ks_script);\n    setCookie('checkConsKrux',1,2,'/');\n    }\n\n}\n}\n\nif (krux_user != 'undefined' && krux_user != \"\")\n{\n\tvar url_check_consent = \"https://consumer.krxd.net/consent/get/221bdf58-7735-4bcb-9673-a03b459a1a40?idt=device&dt=kxcookie&idv=\" + krux_user + \"&pr=gdpr&callback=krux_check_consent\";\n\n\tk_script = document.createElement('script'),\n    k_head = document.getElementsByTagName('head')[0] \n               || document.documentElement;\n\n    k_script.src = url_check_consent;\n    k_head.appendChild(k_script);\n}\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":false,"criteria":[],"collects_data":true},{"id":37294,"name":"DTC dataLayer - allocine.fr","content":"<script>\n(function() {\n    /* Selective Attribute DataLayer Library Tag */\n    var _, allAttr, allowedList, attr, attributes, dataLayerIngester, dataObj,\n        isAllowed, keepCase, libUtil, omitKeys, pageAttr, prefix, toSet, trim,\n        userAttr, util, value,\n        hasProp = {}.hasOwnProperty;\n    _ = Krux('require:underscore');\n    util = Krux('require:util');\n    libUtil = Krux('require:util.library-tag');\n    dataLayerIngester = Krux('require:scrape').ingestDataLayer;\n\n    /* Safe copy of dataLayer object */\n    dataObj = Krux('scrape.javascript', 'dataLayer');\n\n    /* String trimming helper function */\n    trim = function(attr) {\n        return (\"\" + attr).replace(/^\\s+|\\s+$/g, '');\n    };\n\n    /* Attribute configs */\n    pageAttr = _.map('is_netflix'.split(','), trim);\n    userAttr = _.map('user_id'.split(','), trim);\n\n    /* Create a array of attributes striping any empty strings */\n    allAttr = _.without(pageAttr.concat(userAttr), '');\n\n    /* Configuration settings */\n    keepCase = 'false' === 'true';\n    omitKeys = 'undefined'.split(',');\n\n    /* Resolve Prefix */\n    prefix = libUtil.resolvePrefix('undefined', 'undefined',\n        'undefined');\n\n    /* Function to varify if attribute should be used */\n    isAllowed = function(value, whitelist) {\n        var i, len, str, x;\n        str = \"\" + value;\n        if (!((value != null) && str.length > 0)) {\n            return false;\n        }\n        for (i = 0, len = whitelist.length; i < len; i++) {\n            x = whitelist[i];\n            if (value.match(x) != null) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /* Get a full list of attributes usting the dataLayer tool */\n    attributes = dataLayerIngester(dataObj, {\n        omitKeys: libUtil.removeFalsyStrings(omitKeys.concat(libUtil.EXCLUDE_KEYS_CONFIG)),\n        omitValues: libUtil.EXCLUDE_VALUES_CONFIG,\n        caseSensitive: keepCase,\n        useFullPath: 'false' === 'true',\n        useLastValue: 'false' === 'true',\n        customDelimited: [/./],\n        altDelimiter: ',',\n        userKeys: _.map(userAttr, function(exp) {\n            return new RegExp(\"(^|\\\\.)\" + exp + \"$\");\n        }),\n        optimizeNames: true\n    });\n\n    /* Only set Attributes in the allowed list */\n    allowedList = _.map(allAttr, function(name) {\n        return new RegExp(\"(_attr_|_attr_\" + prefix + \"|\\\\.)\" + (keepCase ?\n            name : libUtil.normalizeAttrName(name, {\n                removeDot: false\n            })) + \"$\");\n    });\n    toSet = {};\n    for (attr in attributes) {\n        if (!hasProp.call(attributes, attr)) continue;\n        value = attributes[attr];\n        if (isAllowed(attr, allowedList)) {\n            toSet[attr] = value;\n        }\n    }\n    toSet = Krux('prefix:attr', toSet, prefix);\n    Krux('set', toSet);\n}).call();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":null,"template_replacement":true,"internal":true,"criteria":[],"collects_data":true}],"usermatch_tags":[{"id":6,"name":"Google User Match","content":"<script>\n(function() {\n  if (Krux('get', 'user') != null) {\n      new Image().src = 'https://usermatch.krxd.net/um/v2?partner=google';\n  }\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":71,"name":"Xandr Connect","content":"<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        if (kuid) {\r\n            var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n            var kurl = prefix + '//beacon.krxd.net/usermatch.gif?adnxs_uid=$UID';\r\n            var appnexus_url = '//ib.adnxs.com/getuid?' + kurl\r\n            var i = new Image();\r\n            i.src = appnexus_url;\r\n        }\r\n})();\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":1,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true},{"id":7,"name":"OpenX User Match","content":"<script>\n\n(function(){\n    var prefix = location.protocol == 'https:' ? 'https:' : 'http:' ;\n    var match_pixel = prefix + '//u.openx.net/w/1.0/cm?id=b53b3de0-a5e8-47e3-a78f-ca218d037abe&r=' + prefix + '//beacon.krxd.net/usermatch.gif?partner=openx&partner_uid=';\n    (new Image()).src = match_pixel;\n})();\n\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","priority":2,"template_replacement":false,"internal":true,"criteria":[],"collects_data":true}],"link":{"adslots":{},"bidders":{}}};
  
  for (var i = 0, tags = config.tags, len = tags.length, tag; (tag = tags[i]); ++i) {
    if (String(tag.id) in cs) {
      tag.content = cs[tag.id];
    }
  }

  
  var esiGeo = String(function(){/*
   <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = w.JSON.parse(esiGeo);
    } catch (__) {
      
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }



  var proxy = (window.Krux && window.Krux.q && window.Krux.q[0] && window.Krux.q[0][0] === 'proxy');

  if (!proxy || true) {
    

  load('//cdn.krxd.net/ctjs/controltag.js.e4cdf7ad64ebac73f207c1ce55cc1727', function() {
    log('Loaded stable controltag resource');
    Krux('config', config);
  });

  }

})(window, (function() {
  var obj = {};
  
  return obj;
})());
